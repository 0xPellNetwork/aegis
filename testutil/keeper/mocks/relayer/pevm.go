// Code generated by mockery v2.48.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// RelayerPevmKeeper is an autogenerated mock type for the RelayerPevmKeeper type
type RelayerPevmKeeper struct {
	mock.Mock
}

// CallUpdateDestinationAddressOnGasSwapPEVM provides a mock function with given fields: ctx, chainId, destinationAddress
func (_m *RelayerPevmKeeper) CallUpdateDestinationAddressOnGasSwapPEVM(ctx context.Context, chainId int64, destinationAddress string) error {
	ret := _m.Called(ctx, chainId, destinationAddress)

	if len(ret) == 0 {
		panic("no return value specified for CallUpdateDestinationAddressOnGasSwapPEVM")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int64, string) error); ok {
		r0 = rf(ctx, chainId, destinationAddress)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CallUpdateDestinationAddressOnPellGateway provides a mock function with given fields: ctx, chainId, destinationAddress
func (_m *RelayerPevmKeeper) CallUpdateDestinationAddressOnPellGateway(ctx context.Context, chainId int64, destinationAddress string) error {
	ret := _m.Called(ctx, chainId, destinationAddress)

	if len(ret) == 0 {
		panic("no return value specified for CallUpdateDestinationAddressOnPellGateway")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int64, string) error); ok {
		r0 = rf(ctx, chainId, destinationAddress)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CallUpdateSourceAddressOnPellGateway provides a mock function with given fields: ctx, chainId, sourceAddress
func (_m *RelayerPevmKeeper) CallUpdateSourceAddressOnPellGateway(ctx context.Context, chainId int64, sourceAddress string) error {
	ret := _m.Called(ctx, chainId, sourceAddress)

	if len(ret) == 0 {
		panic("no return value specified for CallUpdateSourceAddressOnPellGateway")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int64, string) error); ok {
		r0 = rf(ctx, chainId, sourceAddress)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRelayerPevmKeeper creates a new instance of RelayerPevmKeeper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRelayerPevmKeeper(t interface {
	mock.TestingT
	Cleanup(func())
}) *RelayerPevmKeeper {
	mock := &RelayerPevmKeeper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
