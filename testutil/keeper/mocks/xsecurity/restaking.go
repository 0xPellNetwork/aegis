// Code generated by mockery v2.48.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	restakingtypes "github.com/0xPellNetwork/aegis/x/restaking/types"

	types "github.com/cosmos/cosmos-sdk/types"
)

// XSecurityRestakingKeeper is an autogenerated mock type for the XSecurityRestakingKeeper type
type XSecurityRestakingKeeper struct {
	mock.Mock
}

// GetAllShares provides a mock function with given fields: ctx
func (_m *XSecurityRestakingKeeper) GetAllShares(ctx types.Context) []*restakingtypes.OperatorShares {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetAllShares")
	}

	var r0 []*restakingtypes.OperatorShares
	if rf, ok := ret.Get(0).(func(types.Context) []*restakingtypes.OperatorShares); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*restakingtypes.OperatorShares)
		}
	}

	return r0
}

// NewXSecurityRestakingKeeper creates a new instance of XSecurityRestakingKeeper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewXSecurityRestakingKeeper(t interface {
	mock.TestingT
	Cleanup(func())
}) *XSecurityRestakingKeeper {
	mock := &XSecurityRestakingKeeper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
