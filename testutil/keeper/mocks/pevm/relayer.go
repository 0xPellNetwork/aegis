// Code generated by mockery v2.48.0. DO NOT EDIT.

package mocks

import (
	chains "github.com/pell-chain/pellcore/pkg/chains"
	mock "github.com/stretchr/testify/mock"

	relayertypes "github.com/pell-chain/pellcore/x/relayer/types"

	types "github.com/cosmos/cosmos-sdk/types"
)

// PevmRelayerKeeper is an autogenerated mock type for the PevmRelayerKeeper type
type PevmRelayerKeeper struct {
	mock.Mock
}

// GetSupportedChains provides a mock function with given fields: ctx
func (_m *PevmRelayerKeeper) GetSupportedChains(ctx types.Context) []*chains.Chain {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetSupportedChains")
	}

	var r0 []*chains.Chain
	if rf, ok := ret.Get(0).(func(types.Context) []*chains.Chain); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*chains.Chain)
		}
	}

	return r0
}

// SetPevmKeeper provides a mock function with given fields: pevmKeeper
func (_m *PevmRelayerKeeper) SetPevmKeeper(pevmKeeper relayertypes.PevmKeeper) {
	_m.Called(pevmKeeper)
}

// NewPevmRelayerKeeper creates a new instance of PevmRelayerKeeper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPevmRelayerKeeper(t interface {
	mock.TestingT
	Cleanup(func())
}) *PevmRelayerKeeper {
	mock := &PevmRelayerKeeper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
