// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: relayer/tss_funds_migrator.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// tss fund migrate infomation
type TssFundMigratorInfo struct {
	ChainId            int64  `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	MigrationXmsgIndex string `protobuf:"bytes,2,opt,name=migration_xmsg_index,json=migrationXmsgIndex,proto3" json:"migration_xmsg_index,omitempty"`
}

func (m *TssFundMigratorInfo) Reset()         { *m = TssFundMigratorInfo{} }
func (m *TssFundMigratorInfo) String() string { return proto.CompactTextString(m) }
func (*TssFundMigratorInfo) ProtoMessage()    {}
func (*TssFundMigratorInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b603d3a8173d21a6, []int{0}
}
func (m *TssFundMigratorInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TssFundMigratorInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TssFundMigratorInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TssFundMigratorInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TssFundMigratorInfo.Merge(m, src)
}
func (m *TssFundMigratorInfo) XXX_Size() int {
	return m.Size()
}
func (m *TssFundMigratorInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TssFundMigratorInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TssFundMigratorInfo proto.InternalMessageInfo

func (m *TssFundMigratorInfo) GetChainId() int64 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *TssFundMigratorInfo) GetMigrationXmsgIndex() string {
	if m != nil {
		return m.MigrationXmsgIndex
	}
	return ""
}

func init() {
	proto.RegisterType((*TssFundMigratorInfo)(nil), "relayer.TssFundMigratorInfo")
}

func init() { proto.RegisterFile("relayer/tss_funds_migrator.proto", fileDescriptor_b603d3a8173d21a6) }

var fileDescriptor_b603d3a8173d21a6 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x28, 0x4a, 0xcd, 0x49,
	0xac, 0x4c, 0x2d, 0xd2, 0x2f, 0x29, 0x2e, 0x8e, 0x4f, 0x2b, 0xcd, 0x4b, 0x29, 0x8e, 0xcf, 0xcd,
	0x4c, 0x2f, 0x4a, 0x2c, 0xc9, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0xaa,
	0x50, 0x4a, 0xe2, 0x12, 0x0e, 0x29, 0x2e, 0x76, 0x2b, 0xcd, 0x4b, 0xf1, 0x85, 0xaa, 0xf0, 0xcc,
	0x4b, 0xcb, 0x17, 0x92, 0xe4, 0xe2, 0x48, 0xce, 0x48, 0xcc, 0xcc, 0x8b, 0xcf, 0x4c, 0x91, 0x60,
	0x54, 0x60, 0xd4, 0x60, 0x0e, 0x62, 0x07, 0xf3, 0x3d, 0x53, 0x84, 0x0c, 0xb8, 0x44, 0x20, 0x86,
	0x65, 0xe6, 0xe7, 0xc5, 0x57, 0xe4, 0x16, 0xa7, 0xc7, 0x67, 0xe6, 0xa5, 0xa4, 0x56, 0x48, 0x30,
	0x29, 0x30, 0x6a, 0x70, 0x06, 0x09, 0xc1, 0xe5, 0x22, 0x72, 0x8b, 0xd3, 0x3d, 0x41, 0x32, 0x4e,
	0x1e, 0x27, 0x1e, 0xc9, 0x31, 0x5e, 0x78, 0x24, 0xc7, 0xf8, 0xe0, 0x91, 0x1c, 0xe3, 0x84, 0xc7,
	0x72, 0x0c, 0x17, 0x1e, 0xcb, 0x31, 0xdc, 0x78, 0x2c, 0xc7, 0x10, 0xa5, 0x97, 0x9e, 0x59, 0x92,
	0x51, 0x9a, 0xa4, 0x97, 0x9c, 0x9f, 0xab, 0x5f, 0x90, 0x9a, 0x93, 0xa3, 0x0b, 0xb6, 0x04, 0xcc,
	0x4c, 0xce, 0x2f, 0x4a, 0xd5, 0xaf, 0xd0, 0x87, 0xfb, 0xa4, 0xb2, 0x20, 0xb5, 0x38, 0x89, 0x0d,
	0xec, 0x7a, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x19, 0x8c, 0xd7, 0xe1, 0x00, 0x00,
	0x00,
}

func (m *TssFundMigratorInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TssFundMigratorInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TssFundMigratorInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MigrationXmsgIndex) > 0 {
		i -= len(m.MigrationXmsgIndex)
		copy(dAtA[i:], m.MigrationXmsgIndex)
		i = encodeVarintTssFundsMigrator(dAtA, i, uint64(len(m.MigrationXmsgIndex)))
		i--
		dAtA[i] = 0x12
	}
	if m.ChainId != 0 {
		i = encodeVarintTssFundsMigrator(dAtA, i, uint64(m.ChainId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintTssFundsMigrator(dAtA []byte, offset int, v uint64) int {
	offset -= sovTssFundsMigrator(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TssFundMigratorInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChainId != 0 {
		n += 1 + sovTssFundsMigrator(uint64(m.ChainId))
	}
	l = len(m.MigrationXmsgIndex)
	if l > 0 {
		n += 1 + l + sovTssFundsMigrator(uint64(l))
	}
	return n
}

func sovTssFundsMigrator(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTssFundsMigrator(x uint64) (n int) {
	return sovTssFundsMigrator(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TssFundMigratorInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTssFundsMigrator
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TssFundMigratorInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TssFundMigratorInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
			}
			m.ChainId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTssFundsMigrator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChainId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MigrationXmsgIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTssFundsMigrator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTssFundsMigrator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTssFundsMigrator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MigrationXmsgIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTssFundsMigrator(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTssFundsMigrator
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTssFundsMigrator(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTssFundsMigrator
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTssFundsMigrator
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTssFundsMigrator
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTssFundsMigrator
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTssFundsMigrator
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTssFundsMigrator
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTssFundsMigrator        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTssFundsMigrator          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTssFundsMigrator = fmt.Errorf("proto: unexpected end of group")
)
