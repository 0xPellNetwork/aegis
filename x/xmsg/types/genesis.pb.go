// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: xmsg/genesis.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GenesisState defines the xmsg modules genesis state.
type GenesisState struct {
	OutTxTrackerList    []OutTxTracker     `protobuf:"bytes,1,rep,name=out_tx_tracker_list,json=outTxTrackerList,proto3" json:"out_tx_tracker_list"`
	GasPriceList        []*GasPrice        `protobuf:"bytes,2,rep,name=gas_price_list,json=gasPriceList,proto3" json:"gas_price_list,omitempty"`
	Xmsgs               []*Xmsg            `protobuf:"bytes,3,rep,name=xmsgs,proto3" json:"xmsgs,omitempty"`
	LastBlockHeightList []*LastBlockHeight `protobuf:"bytes,4,rep,name=last_block_height_list,json=lastBlockHeightList,proto3" json:"last_block_height_list,omitempty"`
	InTxHashToXmsgList  []InTxHashToXmsg   `protobuf:"bytes,5,rep,name=in_tx_hash_to_xmsg_list,json=inTxHashToXmsgList,proto3" json:"in_tx_hash_to_xmsg_list"`
	InTxTrackerList     []InTxTracker      `protobuf:"bytes,6,rep,name=in_tx_tracker_list,json=inTxTrackerList,proto3" json:"in_tx_tracker_list"`
	FinalizedInbounds   []string           `protobuf:"bytes,7,rep,name=finalized_inbounds,json=finalizedInbounds,proto3" json:"finalized_inbounds,omitempty"`
	RateLimiterFlags    RateLimiterFlags   `protobuf:"bytes,8,opt,name=rate_limiter_flags,json=rateLimiterFlags,proto3" json:"rate_limiter_flags"`
}

func (m *GenesisState) Reset()         { *m = GenesisState{} }
func (m *GenesisState) String() string { return proto.CompactTextString(m) }
func (*GenesisState) ProtoMessage()    {}
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_967d4c6075811588, []int{0}
}
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState proto.InternalMessageInfo

func (m *GenesisState) GetOutTxTrackerList() []OutTxTracker {
	if m != nil {
		return m.OutTxTrackerList
	}
	return nil
}

func (m *GenesisState) GetGasPriceList() []*GasPrice {
	if m != nil {
		return m.GasPriceList
	}
	return nil
}

func (m *GenesisState) GetXmsgs() []*Xmsg {
	if m != nil {
		return m.Xmsgs
	}
	return nil
}

func (m *GenesisState) GetLastBlockHeightList() []*LastBlockHeight {
	if m != nil {
		return m.LastBlockHeightList
	}
	return nil
}

func (m *GenesisState) GetInTxHashToXmsgList() []InTxHashToXmsg {
	if m != nil {
		return m.InTxHashToXmsgList
	}
	return nil
}

func (m *GenesisState) GetInTxTrackerList() []InTxTracker {
	if m != nil {
		return m.InTxTrackerList
	}
	return nil
}

func (m *GenesisState) GetFinalizedInbounds() []string {
	if m != nil {
		return m.FinalizedInbounds
	}
	return nil
}

func (m *GenesisState) GetRateLimiterFlags() RateLimiterFlags {
	if m != nil {
		return m.RateLimiterFlags
	}
	return RateLimiterFlags{}
}

// Remove legacy types
type GenesisStateLegacy struct {
	Params              *Params            `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	OutTxTrackerList    []OutTxTracker     `protobuf:"bytes,2,rep,name=out_tx_tracker_list,json=outTxTrackerList,proto3" json:"out_tx_tracker_list"`
	GasPriceList        []*GasPrice        `protobuf:"bytes,3,rep,name=gas_price_list,json=gasPriceList,proto3" json:"gas_price_list,omitempty"`
	Xmsgs               []*Xmsg            `protobuf:"bytes,4,rep,name=xmsgs,proto3" json:"xmsgs,omitempty"`
	LastBlockHeightList []*LastBlockHeight `protobuf:"bytes,5,rep,name=last_block_height_list,json=lastBlockHeightList,proto3" json:"last_block_height_list,omitempty"`
	InTxHashToXmsgList  []InTxHashToXmsg   `protobuf:"bytes,6,rep,name=in_tx_hash_to_xmsg_list,json=inTxHashToXmsgList,proto3" json:"in_tx_hash_to_xmsg_list"`
	InTxTrackerList     []InTxTracker      `protobuf:"bytes,7,rep,name=in_tx_tracker_list,json=inTxTrackerList,proto3" json:"in_tx_tracker_list"`
	FinalizedInbounds   []string           `protobuf:"bytes,8,rep,name=finalized_inbounds,json=finalizedInbounds,proto3" json:"finalized_inbounds,omitempty"`
}

func (m *GenesisStateLegacy) Reset()         { *m = GenesisStateLegacy{} }
func (m *GenesisStateLegacy) String() string { return proto.CompactTextString(m) }
func (*GenesisStateLegacy) ProtoMessage()    {}
func (*GenesisStateLegacy) Descriptor() ([]byte, []int) {
	return fileDescriptor_967d4c6075811588, []int{1}
}
func (m *GenesisStateLegacy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisStateLegacy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisStateLegacy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisStateLegacy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisStateLegacy.Merge(m, src)
}
func (m *GenesisStateLegacy) XXX_Size() int {
	return m.Size()
}
func (m *GenesisStateLegacy) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisStateLegacy.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisStateLegacy proto.InternalMessageInfo

func (m *GenesisStateLegacy) GetParams() *Params {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *GenesisStateLegacy) GetOutTxTrackerList() []OutTxTracker {
	if m != nil {
		return m.OutTxTrackerList
	}
	return nil
}

func (m *GenesisStateLegacy) GetGasPriceList() []*GasPrice {
	if m != nil {
		return m.GasPriceList
	}
	return nil
}

func (m *GenesisStateLegacy) GetXmsgs() []*Xmsg {
	if m != nil {
		return m.Xmsgs
	}
	return nil
}

func (m *GenesisStateLegacy) GetLastBlockHeightList() []*LastBlockHeight {
	if m != nil {
		return m.LastBlockHeightList
	}
	return nil
}

func (m *GenesisStateLegacy) GetInTxHashToXmsgList() []InTxHashToXmsg {
	if m != nil {
		return m.InTxHashToXmsgList
	}
	return nil
}

func (m *GenesisStateLegacy) GetInTxTrackerList() []InTxTracker {
	if m != nil {
		return m.InTxTrackerList
	}
	return nil
}

func (m *GenesisStateLegacy) GetFinalizedInbounds() []string {
	if m != nil {
		return m.FinalizedInbounds
	}
	return nil
}

// enabled param
type Params struct {
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_967d4c6075811588, []int{2}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func init() {
	proto.RegisterType((*GenesisState)(nil), "xmsg.GenesisState")
	proto.RegisterType((*GenesisStateLegacy)(nil), "xmsg.GenesisStateLegacy")
	proto.RegisterType((*Params)(nil), "xmsg.Params")
}

func init() { proto.RegisterFile("xmsg/genesis.proto", fileDescriptor_967d4c6075811588) }

var fileDescriptor_967d4c6075811588 = []byte{
	// 553 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xcf, 0x6e, 0xd3, 0x4c,
	0x14, 0xc5, 0xe3, 0xe6, 0xef, 0x37, 0x8d, 0xda, 0xaf, 0xd3, 0x50, 0x4c, 0x04, 0x26, 0x8a, 0x58,
	0x44, 0x42, 0xc4, 0xa8, 0xf0, 0x04, 0x11, 0x90, 0xb6, 0x8a, 0x68, 0x64, 0xb2, 0x40, 0x6c, 0x46,
	0x93, 0x64, 0x3a, 0x1e, 0xc5, 0xf6, 0x44, 0x9e, 0x89, 0x70, 0x79, 0x07, 0x24, 0x1e, 0xab, 0xcb,
	0x2e, 0x59, 0x21, 0x94, 0xac, 0x79, 0x07, 0xe4, 0x3b, 0x6e, 0x1b, 0x13, 0x75, 0x51, 0x29, 0x3b,
	0xfb, 0xfc, 0xee, 0x3d, 0xe3, 0xb9, 0xf7, 0xc8, 0x08, 0x27, 0xa1, 0xe2, 0x2e, 0x67, 0x11, 0x53,
	0x42, 0x75, 0xe7, 0xb1, 0xd4, 0x12, 0x97, 0x52, 0xad, 0xd9, 0xe0, 0x92, 0x4b, 0x10, 0xdc, 0xf4,
	0xc9, 0xb0, 0x66, 0xc3, 0xd4, 0x53, 0x45, 0xe6, 0xb1, 0x98, 0xb0, 0x4c, 0x7d, 0x06, 0xaa, 0x88,
	0x88, 0x4e, 0x88, 0x4f, 0x95, 0x4f, 0xb4, 0x24, 0xa9, 0x94, 0x61, 0x7b, 0x0d, 0xeb, 0x98, 0x4e,
	0x66, 0x2c, 0xce, 0xc8, 0x53, 0x20, 0x01, 0x55, 0x9a, 0x8c, 0x03, 0x39, 0x99, 0x11, 0x9f, 0x09,
	0xee, 0xeb, 0x8c, 0x3e, 0x01, 0x2a, 0x17, 0x7a, 0xb3, 0xd1, 0x9c, 0x18, 0x53, 0xcd, 0x48, 0x20,
	0x42, 0xa1, 0x59, 0x4c, 0x2e, 0x02, 0xca, 0xb3, 0x2b, 0x34, 0xf7, 0x01, 0xdf, 0x7d, 0x42, 0xfb,
	0x7b, 0x09, 0xd5, 0xfb, 0xe6, 0x96, 0x9f, 0x34, 0xd5, 0x0c, 0xf7, 0xd1, 0x61, 0xde, 0x98, 0x04,
	0x42, 0x69, 0xdb, 0x6a, 0x15, 0x3b, 0xbb, 0xc7, 0xb8, 0x0b, 0xad, 0xe7, 0x0b, 0x3d, 0x4a, 0x46,
	0x06, 0xf7, 0x4a, 0x57, 0xbf, 0x9e, 0x17, 0xbc, 0xff, 0xe5, 0x9a, 0x36, 0x10, 0x4a, 0xe3, 0xb7,
	0x68, 0xef, 0x76, 0x1c, 0xc6, 0x63, 0x07, 0x3c, 0xf6, 0x8c, 0x47, 0x9f, 0xaa, 0x61, 0x8a, 0xbc,
	0x3a, 0xcf, 0x9e, 0xa0, 0xab, 0x85, 0xca, 0x29, 0x56, 0x76, 0x11, 0x8a, 0x91, 0x29, 0xfe, 0x1c,
	0x2a, 0xee, 0x19, 0x80, 0xcf, 0xd0, 0xd1, 0xc6, 0x5c, 0x8c, 0x7f, 0x09, 0x5a, 0x1e, 0x99, 0x96,
	0x01, 0x55, 0xba, 0x97, 0x96, 0x9c, 0x40, 0x85, 0x77, 0x18, 0xe4, 0x05, 0x38, 0xed, 0x1c, 0x3d,
	0xde, 0x5c, 0x8e, 0x31, 0x2b, 0x83, 0x59, 0xc3, 0x98, 0x9d, 0x46, 0xa3, 0xe4, 0x84, 0x2a, 0x7f,
	0x24, 0xd3, 0x2f, 0xc9, 0xae, 0x8c, 0x45, 0x4e, 0x05, 0xc3, 0x77, 0x08, 0xe7, 0xd6, 0x69, 0xbc,
	0x2a, 0xe0, 0x75, 0x70, 0xe7, 0x95, 0x9f, 0xdd, 0xbe, 0x88, 0xf2, 0xa3, 0x7b, 0x85, 0xf0, 0x85,
	0x88, 0x68, 0x20, 0xbe, 0xb1, 0x29, 0x11, 0xd1, 0x58, 0x2e, 0xa2, 0xa9, 0xb2, 0xab, 0xad, 0x62,
	0xe7, 0x3f, 0xef, 0xe0, 0x96, 0x9c, 0x66, 0x00, 0x9f, 0x21, 0xbc, 0xb9, 0x70, 0xbb, 0xd6, 0xb2,
	0x3a, 0xbb, 0xc7, 0x47, 0xe6, 0x50, 0x8f, 0x6a, 0x36, 0x30, 0xf8, 0x43, 0x4a, 0x6f, 0xb6, 0x16,
	0xff, 0xa3, 0xb7, 0xff, 0x14, 0x11, 0x5e, 0xcf, 0xc3, 0x80, 0x71, 0x3a, 0xb9, 0xc4, 0x2f, 0x50,
	0x65, 0x4e, 0x63, 0x1a, 0x2a, 0xdb, 0x02, 0xdb, 0xba, 0xb1, 0x1d, 0x82, 0xe6, 0x65, 0xec, 0xbe,
	0xec, 0xec, 0x6c, 0x21, 0x3b, 0xc5, 0x87, 0x64, 0xa7, 0xf4, 0xf0, 0xec, 0x94, 0xb7, 0x99, 0x9d,
	0xca, 0x16, 0xb3, 0x53, 0xdd, 0x4a, 0x76, 0x6a, 0xf7, 0x64, 0xa7, 0xdd, 0x46, 0x15, 0xb3, 0x44,
	0x6c, 0xa3, 0x2a, 0x8b, 0xe8, 0x38, 0x60, 0x53, 0xd8, 0x71, 0xcd, 0xbb, 0x79, 0xed, 0xbd, 0xbf,
	0x5a, 0x3a, 0xd6, 0xf5, 0xd2, 0xb1, 0x7e, 0x2f, 0x1d, 0xeb, 0xc7, 0xca, 0x29, 0x5c, 0xaf, 0x9c,
	0xc2, 0xcf, 0x95, 0x53, 0xf8, 0xf2, 0x92, 0x0b, 0xed, 0x2f, 0xc6, 0xdd, 0x89, 0x0c, 0xdd, 0xd7,
	0xc9, 0x90, 0x05, 0xc1, 0x47, 0xa6, 0xbf, 0xca, 0x78, 0xe6, 0x52, 0xc6, 0x85, 0x72, 0x13, 0xf8,
	0xd5, 0xb8, 0xfa, 0x72, 0xce, 0xd4, 0xb8, 0x02, 0x7f, 0x9c, 0x37, 0x7f, 0x03, 0x00, 0x00, 0xff,
	0xff, 0x02, 0xf9, 0xbe, 0xf9, 0x5b, 0x05, 0x00, 0x00,
}

func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.RateLimiterFlags.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x42
	if len(m.FinalizedInbounds) > 0 {
		for iNdEx := len(m.FinalizedInbounds) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.FinalizedInbounds[iNdEx])
			copy(dAtA[i:], m.FinalizedInbounds[iNdEx])
			i = encodeVarintGenesis(dAtA, i, uint64(len(m.FinalizedInbounds[iNdEx])))
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.InTxTrackerList) > 0 {
		for iNdEx := len(m.InTxTrackerList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InTxTrackerList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.InTxHashToXmsgList) > 0 {
		for iNdEx := len(m.InTxHashToXmsgList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InTxHashToXmsgList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.LastBlockHeightList) > 0 {
		for iNdEx := len(m.LastBlockHeightList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LastBlockHeightList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Xmsgs) > 0 {
		for iNdEx := len(m.Xmsgs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Xmsgs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.GasPriceList) > 0 {
		for iNdEx := len(m.GasPriceList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GasPriceList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.OutTxTrackerList) > 0 {
		for iNdEx := len(m.OutTxTrackerList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OutTxTrackerList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GenesisStateLegacy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisStateLegacy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisStateLegacy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.FinalizedInbounds) > 0 {
		for iNdEx := len(m.FinalizedInbounds) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.FinalizedInbounds[iNdEx])
			copy(dAtA[i:], m.FinalizedInbounds[iNdEx])
			i = encodeVarintGenesis(dAtA, i, uint64(len(m.FinalizedInbounds[iNdEx])))
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.InTxTrackerList) > 0 {
		for iNdEx := len(m.InTxTrackerList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InTxTrackerList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.InTxHashToXmsgList) > 0 {
		for iNdEx := len(m.InTxHashToXmsgList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InTxHashToXmsgList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.LastBlockHeightList) > 0 {
		for iNdEx := len(m.LastBlockHeightList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LastBlockHeightList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.Xmsgs) > 0 {
		for iNdEx := len(m.Xmsgs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Xmsgs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.GasPriceList) > 0 {
		for iNdEx := len(m.GasPriceList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GasPriceList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.OutTxTrackerList) > 0 {
		for iNdEx := len(m.OutTxTrackerList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OutTxTrackerList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenesis(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Enabled {
		i--
		if m.Enabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.OutTxTrackerList) > 0 {
		for _, e := range m.OutTxTrackerList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.GasPriceList) > 0 {
		for _, e := range m.GasPriceList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.Xmsgs) > 0 {
		for _, e := range m.Xmsgs {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.LastBlockHeightList) > 0 {
		for _, e := range m.LastBlockHeightList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.InTxHashToXmsgList) > 0 {
		for _, e := range m.InTxHashToXmsgList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.InTxTrackerList) > 0 {
		for _, e := range m.InTxTrackerList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.FinalizedInbounds) > 0 {
		for _, s := range m.FinalizedInbounds {
			l = len(s)
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	l = m.RateLimiterFlags.Size()
	n += 1 + l + sovGenesis(uint64(l))
	return n
}

func (m *GenesisStateLegacy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovGenesis(uint64(l))
	}
	if len(m.OutTxTrackerList) > 0 {
		for _, e := range m.OutTxTrackerList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.GasPriceList) > 0 {
		for _, e := range m.GasPriceList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.Xmsgs) > 0 {
		for _, e := range m.Xmsgs {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.LastBlockHeightList) > 0 {
		for _, e := range m.LastBlockHeightList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.InTxHashToXmsgList) > 0 {
		for _, e := range m.InTxHashToXmsgList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.InTxTrackerList) > 0 {
		for _, e := range m.InTxTrackerList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.FinalizedInbounds) > 0 {
		for _, s := range m.FinalizedInbounds {
			l = len(s)
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	return n
}

func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enabled {
		n += 2
	}
	return n
}

func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutTxTrackerList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutTxTrackerList = append(m.OutTxTrackerList, OutTxTracker{})
			if err := m.OutTxTrackerList[len(m.OutTxTrackerList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GasPriceList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GasPriceList = append(m.GasPriceList, &GasPrice{})
			if err := m.GasPriceList[len(m.GasPriceList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Xmsgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Xmsgs = append(m.Xmsgs, &Xmsg{})
			if err := m.Xmsgs[len(m.Xmsgs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastBlockHeightList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastBlockHeightList = append(m.LastBlockHeightList, &LastBlockHeight{})
			if err := m.LastBlockHeightList[len(m.LastBlockHeightList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InTxHashToXmsgList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InTxHashToXmsgList = append(m.InTxHashToXmsgList, InTxHashToXmsg{})
			if err := m.InTxHashToXmsgList[len(m.InTxHashToXmsgList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InTxTrackerList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InTxTrackerList = append(m.InTxTrackerList, InTxTracker{})
			if err := m.InTxTrackerList[len(m.InTxTrackerList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinalizedInbounds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FinalizedInbounds = append(m.FinalizedInbounds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RateLimiterFlags", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RateLimiterFlags.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GenesisStateLegacy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisStateLegacy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisStateLegacy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &Params{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutTxTrackerList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutTxTrackerList = append(m.OutTxTrackerList, OutTxTracker{})
			if err := m.OutTxTrackerList[len(m.OutTxTrackerList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GasPriceList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GasPriceList = append(m.GasPriceList, &GasPrice{})
			if err := m.GasPriceList[len(m.GasPriceList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Xmsgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Xmsgs = append(m.Xmsgs, &Xmsg{})
			if err := m.Xmsgs[len(m.Xmsgs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastBlockHeightList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastBlockHeightList = append(m.LastBlockHeightList, &LastBlockHeight{})
			if err := m.LastBlockHeightList[len(m.LastBlockHeightList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InTxHashToXmsgList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InTxHashToXmsgList = append(m.InTxHashToXmsgList, InTxHashToXmsg{})
			if err := m.InTxHashToXmsgList[len(m.InTxHashToXmsgList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InTxTrackerList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InTxTrackerList = append(m.InTxTrackerList, InTxTracker{})
			if err := m.InTxTrackerList[len(m.InTxTrackerList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinalizedInbounds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FinalizedInbounds = append(m.FinalizedInbounds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enabled = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenesis        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenesis          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenesis = fmt.Errorf("proto: unexpected end of group")
)
