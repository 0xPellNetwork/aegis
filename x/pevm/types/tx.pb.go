// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pevm/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// message for deploy system contract
type MsgDeploySystemContracts struct {
	Signer string `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (m *MsgDeploySystemContracts) Reset()         { *m = MsgDeploySystemContracts{} }
func (m *MsgDeploySystemContracts) String() string { return proto.CompactTextString(m) }
func (*MsgDeploySystemContracts) ProtoMessage()    {}
func (*MsgDeploySystemContracts) Descriptor() ([]byte, []int) {
	return fileDescriptor_87aad1657c329b5b, []int{0}
}
func (m *MsgDeploySystemContracts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeploySystemContracts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeploySystemContracts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeploySystemContracts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeploySystemContracts.Merge(m, src)
}
func (m *MsgDeploySystemContracts) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeploySystemContracts) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeploySystemContracts.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeploySystemContracts proto.InternalMessageInfo

func (m *MsgDeploySystemContracts) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

// response for deploy system contract
type MsgDeploySystemContractsResponse struct {
	SystemContract                  string `protobuf:"bytes,1,opt,name=system_contract,json=systemContract,proto3" json:"system_contract,omitempty"`
	Connector                       string `protobuf:"bytes,2,opt,name=connector,proto3" json:"connector,omitempty"`
	EmptyContract                   string `protobuf:"bytes,3,opt,name=empty_contract,json=emptyContract,proto3" json:"empty_contract,omitempty"`
	ProxyAdmin                      string `protobuf:"bytes,4,opt,name=proxy_admin,json=proxyAdmin,proto3" json:"proxy_admin,omitempty"`
	DelegationManagerProxy          string `protobuf:"bytes,5,opt,name=delegation_manager_proxy,json=delegationManagerProxy,proto3" json:"delegation_manager_proxy,omitempty"`
	StrategyManagerProxy            string `protobuf:"bytes,6,opt,name=strategy_manager_proxy,json=strategyManagerProxy,proto3" json:"strategy_manager_proxy,omitempty"`
	SlasherProxy                    string `protobuf:"bytes,7,opt,name=slasher_proxy,json=slasherProxy,proto3" json:"slasher_proxy,omitempty"`
	DelegationManagerImpl           string `protobuf:"bytes,8,opt,name=delegation_manager_impl,json=delegationManagerImpl,proto3" json:"delegation_manager_impl,omitempty"`
	DelegationManagerInteractorImpl string `protobuf:"bytes,9,opt,name=delegation_manager_interactor_impl,json=delegationManagerInteractorImpl,proto3" json:"delegation_manager_interactor_impl,omitempty"`
	StrategyManagerImpl             string `protobuf:"bytes,10,opt,name=strategy_manager_impl,json=strategyManagerImpl,proto3" json:"strategy_manager_impl,omitempty"`
	SlasherImpl                     string `protobuf:"bytes,11,opt,name=slasher_impl,json=slasherImpl,proto3" json:"slasher_impl,omitempty"`
	DvsDirectoryImpl                string `protobuf:"bytes,12,opt,name=dvs_directory_impl,json=dvsDirectoryImpl,proto3" json:"dvs_directory_impl,omitempty"`
	DvsDirectoryProxy               string `protobuf:"bytes,13,opt,name=dvs_directory_proxy,json=dvsDirectoryProxy,proto3" json:"dvs_directory_proxy,omitempty"`
	RegistryRouter                  string `protobuf:"bytes,14,opt,name=registry_router,json=registryRouter,proto3" json:"registry_router,omitempty"`
	RegistryRouterFactory           string `protobuf:"bytes,15,opt,name=registry_router_factory,json=registryRouterFactory,proto3" json:"registry_router_factory,omitempty"`
	WrappedPell                     string `protobuf:"bytes,16,opt,name=wrapped_pell,json=wrappedPell,proto3" json:"wrapped_pell,omitempty"`
	Gateway                         string `protobuf:"bytes,17,opt,name=gateway,proto3" json:"gateway,omitempty"`
	GasSwap                         string `protobuf:"bytes,18,opt,name=gas_swap,json=gasSwap,proto3" json:"gas_swap,omitempty"`
	StakeRegistryRouter             string `protobuf:"bytes,19,opt,name=stake_registry_router,json=stakeRegistryRouter,proto3" json:"stake_registry_router,omitempty"`
}

func (m *MsgDeploySystemContractsResponse) Reset()         { *m = MsgDeploySystemContractsResponse{} }
func (m *MsgDeploySystemContractsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeploySystemContractsResponse) ProtoMessage()    {}
func (*MsgDeploySystemContractsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_87aad1657c329b5b, []int{1}
}
func (m *MsgDeploySystemContractsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeploySystemContractsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeploySystemContractsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeploySystemContractsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeploySystemContractsResponse.Merge(m, src)
}
func (m *MsgDeploySystemContractsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeploySystemContractsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeploySystemContractsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeploySystemContractsResponse proto.InternalMessageInfo

func (m *MsgDeploySystemContractsResponse) GetSystemContract() string {
	if m != nil {
		return m.SystemContract
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetConnector() string {
	if m != nil {
		return m.Connector
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetEmptyContract() string {
	if m != nil {
		return m.EmptyContract
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetProxyAdmin() string {
	if m != nil {
		return m.ProxyAdmin
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetDelegationManagerProxy() string {
	if m != nil {
		return m.DelegationManagerProxy
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetStrategyManagerProxy() string {
	if m != nil {
		return m.StrategyManagerProxy
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetSlasherProxy() string {
	if m != nil {
		return m.SlasherProxy
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetDelegationManagerImpl() string {
	if m != nil {
		return m.DelegationManagerImpl
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetDelegationManagerInteractorImpl() string {
	if m != nil {
		return m.DelegationManagerInteractorImpl
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetStrategyManagerImpl() string {
	if m != nil {
		return m.StrategyManagerImpl
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetSlasherImpl() string {
	if m != nil {
		return m.SlasherImpl
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetDvsDirectoryImpl() string {
	if m != nil {
		return m.DvsDirectoryImpl
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetDvsDirectoryProxy() string {
	if m != nil {
		return m.DvsDirectoryProxy
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetRegistryRouter() string {
	if m != nil {
		return m.RegistryRouter
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetRegistryRouterFactory() string {
	if m != nil {
		return m.RegistryRouterFactory
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetWrappedPell() string {
	if m != nil {
		return m.WrappedPell
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetGateway() string {
	if m != nil {
		return m.Gateway
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetGasSwap() string {
	if m != nil {
		return m.GasSwap
	}
	return ""
}

func (m *MsgDeploySystemContractsResponse) GetStakeRegistryRouter() string {
	if m != nil {
		return m.StakeRegistryRouter
	}
	return ""
}

// message for upgrade system contract
type MsgUpgradeSystemContracts struct {
	Signer string `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (m *MsgUpgradeSystemContracts) Reset()         { *m = MsgUpgradeSystemContracts{} }
func (m *MsgUpgradeSystemContracts) String() string { return proto.CompactTextString(m) }
func (*MsgUpgradeSystemContracts) ProtoMessage()    {}
func (*MsgUpgradeSystemContracts) Descriptor() ([]byte, []int) {
	return fileDescriptor_87aad1657c329b5b, []int{2}
}
func (m *MsgUpgradeSystemContracts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpgradeSystemContracts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpgradeSystemContracts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpgradeSystemContracts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpgradeSystemContracts.Merge(m, src)
}
func (m *MsgUpgradeSystemContracts) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpgradeSystemContracts) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpgradeSystemContracts.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpgradeSystemContracts proto.InternalMessageInfo

func (m *MsgUpgradeSystemContracts) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

// message for upgrade system contract response
type MsgUpgradeSystemContractsResponse struct {
	RegistryRouter      string `protobuf:"bytes,1,opt,name=registry_router,json=registryRouter,proto3" json:"registry_router,omitempty"`
	StakeRegistryRouter string `protobuf:"bytes,2,opt,name=stake_registry_router,json=stakeRegistryRouter,proto3" json:"stake_registry_router,omitempty"`
}

func (m *MsgUpgradeSystemContractsResponse) Reset()         { *m = MsgUpgradeSystemContractsResponse{} }
func (m *MsgUpgradeSystemContractsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpgradeSystemContractsResponse) ProtoMessage()    {}
func (*MsgUpgradeSystemContractsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_87aad1657c329b5b, []int{3}
}
func (m *MsgUpgradeSystemContractsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpgradeSystemContractsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpgradeSystemContractsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpgradeSystemContractsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpgradeSystemContractsResponse.Merge(m, src)
}
func (m *MsgUpgradeSystemContractsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpgradeSystemContractsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpgradeSystemContractsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpgradeSystemContractsResponse proto.InternalMessageInfo

func (m *MsgUpgradeSystemContractsResponse) GetRegistryRouter() string {
	if m != nil {
		return m.RegistryRouter
	}
	return ""
}

func (m *MsgUpgradeSystemContractsResponse) GetStakeRegistryRouter() string {
	if m != nil {
		return m.StakeRegistryRouter
	}
	return ""
}

// message for deploy gateway contract
type MsgDeployGatewayContract struct {
	Signer string `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (m *MsgDeployGatewayContract) Reset()         { *m = MsgDeployGatewayContract{} }
func (m *MsgDeployGatewayContract) String() string { return proto.CompactTextString(m) }
func (*MsgDeployGatewayContract) ProtoMessage()    {}
func (*MsgDeployGatewayContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_87aad1657c329b5b, []int{4}
}
func (m *MsgDeployGatewayContract) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeployGatewayContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeployGatewayContract.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeployGatewayContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeployGatewayContract.Merge(m, src)
}
func (m *MsgDeployGatewayContract) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeployGatewayContract) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeployGatewayContract.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeployGatewayContract proto.InternalMessageInfo

func (m *MsgDeployGatewayContract) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

// message for deploy gateway contract response
type MsgDeployGatewayContractResponse struct {
	Gateway string `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway,omitempty"`
}

func (m *MsgDeployGatewayContractResponse) Reset()         { *m = MsgDeployGatewayContractResponse{} }
func (m *MsgDeployGatewayContractResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeployGatewayContractResponse) ProtoMessage()    {}
func (*MsgDeployGatewayContractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_87aad1657c329b5b, []int{5}
}
func (m *MsgDeployGatewayContractResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeployGatewayContractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeployGatewayContractResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeployGatewayContractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeployGatewayContractResponse.Merge(m, src)
}
func (m *MsgDeployGatewayContractResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeployGatewayContractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeployGatewayContractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeployGatewayContractResponse proto.InternalMessageInfo

func (m *MsgDeployGatewayContractResponse) GetGateway() string {
	if m != nil {
		return m.Gateway
	}
	return ""
}

// message for deploy conenctor contract
type MsgDeployConnectorContract struct {
	Signer string `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (m *MsgDeployConnectorContract) Reset()         { *m = MsgDeployConnectorContract{} }
func (m *MsgDeployConnectorContract) String() string { return proto.CompactTextString(m) }
func (*MsgDeployConnectorContract) ProtoMessage()    {}
func (*MsgDeployConnectorContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_87aad1657c329b5b, []int{6}
}
func (m *MsgDeployConnectorContract) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeployConnectorContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeployConnectorContract.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeployConnectorContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeployConnectorContract.Merge(m, src)
}
func (m *MsgDeployConnectorContract) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeployConnectorContract) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeployConnectorContract.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeployConnectorContract proto.InternalMessageInfo

func (m *MsgDeployConnectorContract) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

// message for deploy conenctor contract response
type MsgDeployConnectorContractResponse struct {
	Connector string `protobuf:"bytes,1,opt,name=connector,proto3" json:"connector,omitempty"`
}

func (m *MsgDeployConnectorContractResponse) Reset()         { *m = MsgDeployConnectorContractResponse{} }
func (m *MsgDeployConnectorContractResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeployConnectorContractResponse) ProtoMessage()    {}
func (*MsgDeployConnectorContractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_87aad1657c329b5b, []int{7}
}
func (m *MsgDeployConnectorContractResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeployConnectorContractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeployConnectorContractResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeployConnectorContractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeployConnectorContractResponse.Merge(m, src)
}
func (m *MsgDeployConnectorContractResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeployConnectorContractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeployConnectorContractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeployConnectorContractResponse proto.InternalMessageInfo

func (m *MsgDeployConnectorContractResponse) GetConnector() string {
	if m != nil {
		return m.Connector
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgDeploySystemContracts)(nil), "pevm.MsgDeploySystemContracts")
	proto.RegisterType((*MsgDeploySystemContractsResponse)(nil), "pevm.MsgDeploySystemContractsResponse")
	proto.RegisterType((*MsgUpgradeSystemContracts)(nil), "pevm.MsgUpgradeSystemContracts")
	proto.RegisterType((*MsgUpgradeSystemContractsResponse)(nil), "pevm.MsgUpgradeSystemContractsResponse")
	proto.RegisterType((*MsgDeployGatewayContract)(nil), "pevm.MsgDeployGatewayContract")
	proto.RegisterType((*MsgDeployGatewayContractResponse)(nil), "pevm.MsgDeployGatewayContractResponse")
	proto.RegisterType((*MsgDeployConnectorContract)(nil), "pevm.MsgDeployConnectorContract")
	proto.RegisterType((*MsgDeployConnectorContractResponse)(nil), "pevm.MsgDeployConnectorContractResponse")
}

func init() { proto.RegisterFile("pevm/tx.proto", fileDescriptor_87aad1657c329b5b) }

var fileDescriptor_87aad1657c329b5b = []byte{
	// 723 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xad, 0xdb, 0x7e, 0x69, 0x7b, 0xd3, 0xf4, 0xc7, 0xfd, 0x9a, 0xba, 0x11, 0x4a, 0xdb, 0x20,
	0x68, 0x05, 0x28, 0x86, 0x82, 0x10, 0x42, 0x48, 0xd0, 0x1f, 0x40, 0x08, 0x05, 0x55, 0xa9, 0xd8,
	0xb0, 0xb1, 0xa6, 0xf1, 0xe0, 0x5a, 0xb5, 0x3d, 0xa3, 0x99, 0x69, 0x12, 0xef, 0x10, 0x4f, 0x80,
	0x78, 0x12, 0x1e, 0x83, 0x65, 0x97, 0x2c, 0x51, 0xbb, 0x60, 0xc5, 0x3b, 0x20, 0xcf, 0xd8, 0x6e,
	0xec, 0xc4, 0x14, 0x58, 0x45, 0x73, 0xcf, 0xb9, 0x27, 0xf7, 0xdc, 0x3b, 0x73, 0x0d, 0x15, 0x8a,
	0xbb, 0xbe, 0x29, 0xfa, 0x4d, 0xca, 0x88, 0x20, 0xfa, 0x64, 0x74, 0xac, 0xad, 0x74, 0x08, 0xf7,
	0x09, 0x37, 0x7d, 0xee, 0x98, 0xdd, 0x7b, 0xd1, 0x8f, 0x82, 0x1b, 0x4f, 0xc1, 0x68, 0x71, 0x67,
	0x1f, 0x53, 0x8f, 0x84, 0x87, 0x21, 0x17, 0xd8, 0xdf, 0x23, 0x81, 0x60, 0xa8, 0x23, 0xb8, 0x5e,
	0x85, 0x12, 0x77, 0x9d, 0x00, 0x33, 0x43, 0x5b, 0xd7, 0xb6, 0x66, 0xda, 0xf1, 0xe9, 0x71, 0xf9,
	0xe3, 0x8f, 0x2f, 0xb7, 0xe2, 0x43, 0xe3, 0x67, 0x09, 0xd6, 0x8b, 0x14, 0xda, 0x98, 0x53, 0x12,
	0x70, 0xac, 0x6f, 0xc2, 0x3c, 0x97, 0x90, 0xd5, 0x89, 0xb1, 0x58, 0x72, 0x8e, 0x67, 0x32, 0xf4,
	0x6b, 0x30, 0xd3, 0x21, 0x41, 0x80, 0x3b, 0x82, 0x30, 0x63, 0x5c, 0x52, 0x2e, 0x03, 0xfa, 0x0d,
	0x98, 0xc3, 0x3e, 0x15, 0xe1, 0xa5, 0xca, 0x84, 0xa4, 0x54, 0x64, 0x34, 0x15, 0x59, 0x83, 0x32,
	0x65, 0xa4, 0x1f, 0x5a, 0xc8, 0xf6, 0xdd, 0xc0, 0x98, 0x94, 0x1c, 0x90, 0xa1, 0x9d, 0x28, 0xa2,
	0x3f, 0x02, 0xc3, 0xc6, 0x1e, 0x76, 0x90, 0x70, 0x49, 0x60, 0xf9, 0x28, 0x40, 0x0e, 0x66, 0x96,
	0x24, 0x18, 0xff, 0x49, 0x76, 0xf5, 0x12, 0x6f, 0x29, 0xf8, 0x20, 0x42, 0xf5, 0x07, 0x50, 0xe5,
	0x82, 0x21, 0x81, 0x9d, 0x30, 0x97, 0x57, 0x92, 0x79, 0xff, 0x27, 0x68, 0x26, 0xeb, 0x3a, 0x54,
	0xb8, 0x87, 0xf8, 0x71, 0x4a, 0x9e, 0x92, 0xe4, 0xd9, 0x38, 0xa8, 0x48, 0x0f, 0x61, 0x65, 0x44,
	0x51, 0xae, 0x4f, 0x3d, 0x63, 0x5a, 0xd2, 0x97, 0x87, 0x6a, 0x7a, 0xe5, 0x53, 0x4f, 0x7f, 0x0d,
	0x8d, 0x51, 0x79, 0x81, 0xc0, 0x51, 0x33, 0x48, 0x2c, 0x31, 0x23, 0x25, 0xd6, 0x86, 0x25, 0x52,
	0x9e, 0x14, 0xdb, 0x86, 0xe5, 0x21, 0x7f, 0x32, 0x1f, 0x64, 0xfe, 0x52, 0xce, 0x9e, 0xcc, 0xd9,
	0x80, 0xc4, 0x88, 0xa2, 0x96, 0x25, 0xb5, 0x1c, 0xc7, 0x24, 0xe5, 0x0e, 0xe8, 0x76, 0x97, 0x5b,
	0xb6, 0xcb, 0xe4, 0x20, 0x43, 0x45, 0x9c, 0x95, 0xc4, 0x05, 0xbb, 0xcb, 0xf7, 0x13, 0x40, 0xb2,
	0x9b, 0xb0, 0x94, 0x65, 0xab, 0xa6, 0x55, 0x24, 0x7d, 0x71, 0x90, 0xae, 0x3a, 0xb7, 0x09, 0xf3,
	0x0c, 0x3b, 0x2e, 0x17, 0x2c, 0xb4, 0x18, 0x39, 0x15, 0x98, 0x19, 0x73, 0xea, 0x76, 0x25, 0xe1,
	0xb6, 0x8c, 0x46, 0x2d, 0xce, 0x11, 0xad, 0xf7, 0xd2, 0x7b, 0x68, 0xcc, 0xab, 0x16, 0x67, 0x13,
	0x5e, 0x28, 0x30, 0x72, 0xd8, 0x63, 0x88, 0x52, 0x6c, 0x5b, 0x14, 0x7b, 0x9e, 0xb1, 0xa0, 0x1c,
	0xc6, 0xb1, 0x03, 0xec, 0x79, 0xba, 0x01, 0x53, 0x0e, 0x12, 0xb8, 0x87, 0x42, 0x63, 0x51, 0xa2,
	0xc9, 0x51, 0x5f, 0x85, 0x69, 0x07, 0x71, 0x8b, 0xf7, 0x10, 0x35, 0xf4, 0x04, 0xe2, 0x87, 0x3d,
	0x44, 0x55, 0xb7, 0xd1, 0x09, 0xb6, 0xf2, 0xe5, 0x2f, 0x25, 0xdd, 0x46, 0x27, 0xb8, 0x9d, 0x29,
	0xa9, 0xf1, 0x0c, 0x56, 0x5b, 0xdc, 0x79, 0x4b, 0x1d, 0x86, 0x6c, 0xfc, 0x4f, 0x2f, 0xf6, 0x83,
	0x06, 0x1b, 0x85, 0x12, 0x83, 0x4f, 0x36, 0x5f, 0x95, 0x36, 0xb2, 0xa9, 0x85, 0x26, 0xc6, 0x8b,
	0x4d, 0x0c, 0x6e, 0x9d, 0x97, 0xaa, 0x4f, 0xe9, 0xeb, 0xfd, 0x23, 0x0f, 0x4f, 0x06, 0x96, 0x4e,
	0x4e, 0x20, 0x75, 0x30, 0x30, 0x12, 0x2d, 0x33, 0x92, 0xc6, 0x0e, 0xd4, 0xd2, 0xec, 0xbd, 0x64,
	0xbb, 0xfc, 0x5d, 0x01, 0xbb, 0xd0, 0x28, 0x96, 0x48, 0x4b, 0xc8, 0xac, 0x33, 0x2d, 0xb7, 0xce,
	0xb6, 0x3f, 0x4f, 0xc0, 0x44, 0x8b, 0x3b, 0xba, 0x05, 0xcb, 0xa3, 0x17, 0x70, 0xbd, 0x19, 0x2d,
	0xef, 0x66, 0xd1, 0x7a, 0xad, 0xdd, 0xfc, 0x3d, 0x9e, 0x96, 0x71, 0x04, 0xd5, 0x82, 0x0b, 0xb3,
	0x96, 0x2a, 0x8c, 0x26, 0xd4, 0x36, 0xaf, 0x20, 0xa4, 0xff, 0x91, 0x9a, 0xc8, 0xcf, 0x33, 0x6f,
	0x22, 0x87, 0x0f, 0x99, 0x28, 0x1a, 0x27, 0x86, 0x95, 0xa2, 0x89, 0xad, 0xe7, 0x24, 0x86, 0x18,
	0xb5, 0xad, 0xab, 0x18, 0xc9, 0xdf, 0xec, 0x3e, 0xff, 0x7a, 0x5e, 0xd7, 0xce, 0xce, 0xeb, 0xda,
	0xf7, 0xf3, 0xba, 0xf6, 0xe9, 0xa2, 0x3e, 0x76, 0x76, 0x51, 0x1f, 0xfb, 0x76, 0x51, 0x1f, 0x7b,
	0x77, 0xdb, 0x71, 0xc5, 0xf1, 0xe9, 0x51, 0xb3, 0x43, 0x7c, 0xf3, 0x6e, 0x3f, 0x7a, 0xf5, 0x6f,
	0xb0, 0xe8, 0x11, 0x76, 0x62, 0xa2, 0xe8, 0x76, 0x9b, 0x7d, 0x53, 0x7d, 0x79, 0x43, 0x8a, 0xf9,
	0x51, 0x49, 0x7e, 0x5e, 0xef, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x2c, 0x35, 0x31, 0xb9, 0x8e,
	0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// DeploySystemContracts deploys system contracts. This operation is restricted to admin users.
	DeploySystemContracts(ctx context.Context, in *MsgDeploySystemContracts, opts ...grpc.CallOption) (*MsgDeploySystemContractsResponse, error)
	// UpgradeSystemContracts upgrades system contracts. This operation is also restricted to admin users.
	UpgradeSystemContracts(ctx context.Context, in *MsgUpgradeSystemContracts, opts ...grpc.CallOption) (*MsgUpgradeSystemContractsResponse, error)
	// DeployGatewayContract deploys gateway contract. This operation is also restricted to admin users.
	DeployGatewayContract(ctx context.Context, in *MsgDeployGatewayContract, opts ...grpc.CallOption) (*MsgDeployGatewayContractResponse, error)
	// DeployConnectorContract deploys connector contract. This operation is also restricted to admin users.
	DeployConnectorContract(ctx context.Context, in *MsgDeployConnectorContract, opts ...grpc.CallOption) (*MsgDeployConnectorContractResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) DeploySystemContracts(ctx context.Context, in *MsgDeploySystemContracts, opts ...grpc.CallOption) (*MsgDeploySystemContractsResponse, error) {
	out := new(MsgDeploySystemContractsResponse)
	err := c.cc.Invoke(ctx, "/pevm.Msg/DeploySystemContracts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpgradeSystemContracts(ctx context.Context, in *MsgUpgradeSystemContracts, opts ...grpc.CallOption) (*MsgUpgradeSystemContractsResponse, error) {
	out := new(MsgUpgradeSystemContractsResponse)
	err := c.cc.Invoke(ctx, "/pevm.Msg/UpgradeSystemContracts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeployGatewayContract(ctx context.Context, in *MsgDeployGatewayContract, opts ...grpc.CallOption) (*MsgDeployGatewayContractResponse, error) {
	out := new(MsgDeployGatewayContractResponse)
	err := c.cc.Invoke(ctx, "/pevm.Msg/DeployGatewayContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeployConnectorContract(ctx context.Context, in *MsgDeployConnectorContract, opts ...grpc.CallOption) (*MsgDeployConnectorContractResponse, error) {
	out := new(MsgDeployConnectorContractResponse)
	err := c.cc.Invoke(ctx, "/pevm.Msg/DeployConnectorContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// DeploySystemContracts deploys system contracts. This operation is restricted to admin users.
	DeploySystemContracts(context.Context, *MsgDeploySystemContracts) (*MsgDeploySystemContractsResponse, error)
	// UpgradeSystemContracts upgrades system contracts. This operation is also restricted to admin users.
	UpgradeSystemContracts(context.Context, *MsgUpgradeSystemContracts) (*MsgUpgradeSystemContractsResponse, error)
	// DeployGatewayContract deploys gateway contract. This operation is also restricted to admin users.
	DeployGatewayContract(context.Context, *MsgDeployGatewayContract) (*MsgDeployGatewayContractResponse, error)
	// DeployConnectorContract deploys connector contract. This operation is also restricted to admin users.
	DeployConnectorContract(context.Context, *MsgDeployConnectorContract) (*MsgDeployConnectorContractResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) DeploySystemContracts(ctx context.Context, req *MsgDeploySystemContracts) (*MsgDeploySystemContractsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeploySystemContracts not implemented")
}
func (*UnimplementedMsgServer) UpgradeSystemContracts(ctx context.Context, req *MsgUpgradeSystemContracts) (*MsgUpgradeSystemContractsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpgradeSystemContracts not implemented")
}
func (*UnimplementedMsgServer) DeployGatewayContract(ctx context.Context, req *MsgDeployGatewayContract) (*MsgDeployGatewayContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeployGatewayContract not implemented")
}
func (*UnimplementedMsgServer) DeployConnectorContract(ctx context.Context, req *MsgDeployConnectorContract) (*MsgDeployConnectorContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeployConnectorContract not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_DeploySystemContracts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeploySystemContracts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeploySystemContracts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pevm.Msg/DeploySystemContracts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeploySystemContracts(ctx, req.(*MsgDeploySystemContracts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpgradeSystemContracts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpgradeSystemContracts)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpgradeSystemContracts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pevm.Msg/UpgradeSystemContracts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpgradeSystemContracts(ctx, req.(*MsgUpgradeSystemContracts))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeployGatewayContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeployGatewayContract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeployGatewayContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pevm.Msg/DeployGatewayContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeployGatewayContract(ctx, req.(*MsgDeployGatewayContract))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeployConnectorContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeployConnectorContract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeployConnectorContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pevm.Msg/DeployConnectorContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeployConnectorContract(ctx, req.(*MsgDeployConnectorContract))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pevm.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeploySystemContracts",
			Handler:    _Msg_DeploySystemContracts_Handler,
		},
		{
			MethodName: "UpgradeSystemContracts",
			Handler:    _Msg_UpgradeSystemContracts_Handler,
		},
		{
			MethodName: "DeployGatewayContract",
			Handler:    _Msg_DeployGatewayContract_Handler,
		},
		{
			MethodName: "DeployConnectorContract",
			Handler:    _Msg_DeployConnectorContract_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pevm/tx.proto",
}

func (m *MsgDeploySystemContracts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeploySystemContracts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeploySystemContracts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeploySystemContractsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeploySystemContractsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeploySystemContractsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StakeRegistryRouter) > 0 {
		i -= len(m.StakeRegistryRouter)
		copy(dAtA[i:], m.StakeRegistryRouter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StakeRegistryRouter)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if len(m.GasSwap) > 0 {
		i -= len(m.GasSwap)
		copy(dAtA[i:], m.GasSwap)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GasSwap)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.Gateway) > 0 {
		i -= len(m.Gateway)
		copy(dAtA[i:], m.Gateway)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Gateway)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.WrappedPell) > 0 {
		i -= len(m.WrappedPell)
		copy(dAtA[i:], m.WrappedPell)
		i = encodeVarintTx(dAtA, i, uint64(len(m.WrappedPell)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.RegistryRouterFactory) > 0 {
		i -= len(m.RegistryRouterFactory)
		copy(dAtA[i:], m.RegistryRouterFactory)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RegistryRouterFactory)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.RegistryRouter) > 0 {
		i -= len(m.RegistryRouter)
		copy(dAtA[i:], m.RegistryRouter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RegistryRouter)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.DvsDirectoryProxy) > 0 {
		i -= len(m.DvsDirectoryProxy)
		copy(dAtA[i:], m.DvsDirectoryProxy)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DvsDirectoryProxy)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.DvsDirectoryImpl) > 0 {
		i -= len(m.DvsDirectoryImpl)
		copy(dAtA[i:], m.DvsDirectoryImpl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DvsDirectoryImpl)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.SlasherImpl) > 0 {
		i -= len(m.SlasherImpl)
		copy(dAtA[i:], m.SlasherImpl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SlasherImpl)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.StrategyManagerImpl) > 0 {
		i -= len(m.StrategyManagerImpl)
		copy(dAtA[i:], m.StrategyManagerImpl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StrategyManagerImpl)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.DelegationManagerInteractorImpl) > 0 {
		i -= len(m.DelegationManagerInteractorImpl)
		copy(dAtA[i:], m.DelegationManagerInteractorImpl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DelegationManagerInteractorImpl)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.DelegationManagerImpl) > 0 {
		i -= len(m.DelegationManagerImpl)
		copy(dAtA[i:], m.DelegationManagerImpl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DelegationManagerImpl)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.SlasherProxy) > 0 {
		i -= len(m.SlasherProxy)
		copy(dAtA[i:], m.SlasherProxy)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SlasherProxy)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.StrategyManagerProxy) > 0 {
		i -= len(m.StrategyManagerProxy)
		copy(dAtA[i:], m.StrategyManagerProxy)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StrategyManagerProxy)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DelegationManagerProxy) > 0 {
		i -= len(m.DelegationManagerProxy)
		copy(dAtA[i:], m.DelegationManagerProxy)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DelegationManagerProxy)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ProxyAdmin) > 0 {
		i -= len(m.ProxyAdmin)
		copy(dAtA[i:], m.ProxyAdmin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ProxyAdmin)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.EmptyContract) > 0 {
		i -= len(m.EmptyContract)
		copy(dAtA[i:], m.EmptyContract)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EmptyContract)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Connector) > 0 {
		i -= len(m.Connector)
		copy(dAtA[i:], m.Connector)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Connector)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SystemContract) > 0 {
		i -= len(m.SystemContract)
		copy(dAtA[i:], m.SystemContract)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SystemContract)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpgradeSystemContracts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpgradeSystemContracts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpgradeSystemContracts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpgradeSystemContractsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpgradeSystemContractsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpgradeSystemContractsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StakeRegistryRouter) > 0 {
		i -= len(m.StakeRegistryRouter)
		copy(dAtA[i:], m.StakeRegistryRouter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StakeRegistryRouter)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.RegistryRouter) > 0 {
		i -= len(m.RegistryRouter)
		copy(dAtA[i:], m.RegistryRouter)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RegistryRouter)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeployGatewayContract) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeployGatewayContract) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeployGatewayContract) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeployGatewayContractResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeployGatewayContractResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeployGatewayContractResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Gateway) > 0 {
		i -= len(m.Gateway)
		copy(dAtA[i:], m.Gateway)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Gateway)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeployConnectorContract) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeployConnectorContract) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeployConnectorContract) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeployConnectorContractResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeployConnectorContractResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeployConnectorContractResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Connector) > 0 {
		i -= len(m.Connector)
		copy(dAtA[i:], m.Connector)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Connector)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgDeploySystemContracts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeploySystemContractsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SystemContract)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Connector)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EmptyContract)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ProxyAdmin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DelegationManagerProxy)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StrategyManagerProxy)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SlasherProxy)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DelegationManagerImpl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DelegationManagerInteractorImpl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StrategyManagerImpl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SlasherImpl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DvsDirectoryImpl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DvsDirectoryProxy)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RegistryRouter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RegistryRouterFactory)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.WrappedPell)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.Gateway)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.GasSwap)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.StakeRegistryRouter)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpgradeSystemContracts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpgradeSystemContractsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RegistryRouter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StakeRegistryRouter)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeployGatewayContract) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeployGatewayContractResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Gateway)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeployConnectorContract) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeployConnectorContractResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Connector)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgDeploySystemContracts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeploySystemContracts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeploySystemContracts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeploySystemContractsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeploySystemContractsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeploySystemContractsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemContract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemContract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Connector", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Connector = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmptyContract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EmptyContract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProxyAdmin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProxyAdmin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationManagerProxy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegationManagerProxy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StrategyManagerProxy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StrategyManagerProxy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SlasherProxy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SlasherProxy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationManagerImpl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegationManagerImpl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationManagerInteractorImpl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegationManagerInteractorImpl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StrategyManagerImpl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StrategyManagerImpl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SlasherImpl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SlasherImpl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DvsDirectoryImpl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DvsDirectoryImpl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DvsDirectoryProxy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DvsDirectoryProxy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegistryRouter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RegistryRouter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegistryRouterFactory", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RegistryRouterFactory = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WrappedPell", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WrappedPell = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gateway", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Gateway = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GasSwap", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GasSwap = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StakeRegistryRouter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StakeRegistryRouter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpgradeSystemContracts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpgradeSystemContracts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpgradeSystemContracts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpgradeSystemContractsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpgradeSystemContractsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpgradeSystemContractsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegistryRouter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RegistryRouter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StakeRegistryRouter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StakeRegistryRouter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeployGatewayContract) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeployGatewayContract: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeployGatewayContract: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeployGatewayContractResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeployGatewayContractResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeployGatewayContractResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gateway", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Gateway = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeployConnectorContract) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeployConnectorContract: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeployConnectorContract: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeployConnectorContractResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeployConnectorContractResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeployConnectorContractResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Connector", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Connector = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
