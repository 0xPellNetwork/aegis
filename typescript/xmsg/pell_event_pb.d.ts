// @generated by protoc-gen-es v1.3.0 with parameter "target=dts"
// @generated from file xmsg/pell_event.proto (package pellchain.pellcore.xmsg, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * / @notice Emitted when @param staker deposit @param shares of @param token to
 * / @param strategy. event Deposit(address staker, IERC20 token, IStrategy
 * / strategy, uint256 shares);
 *
 * @generated from message pellchain.pellcore.xmsg.StakerDeposited
 */
export declare class StakerDeposited extends Message<StakerDeposited> {
  /**
   * @generated from field: string staker = 1;
   */
  staker: string;

  /**
   * @generated from field: string token = 2;
   */
  token: string;

  /**
   * @generated from field: string strategy = 3;
   */
  strategy: string;

  /**
   * @generated from field: string shares = 4;
   */
  shares: string;

  constructor(data?: PartialMessage<StakerDeposited>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "pellchain.pellcore.xmsg.StakerDeposited";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StakerDeposited;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StakerDeposited;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StakerDeposited;

  static equals(a: StakerDeposited | PlainMessage<StakerDeposited> | undefined, b: StakerDeposited | PlainMessage<StakerDeposited> | undefined): boolean;
}

/**
 * / @notice Emitted when @param staker delegates to @param operator.
 * / event StakerDelegated(address indexed staker, address indexed operator);
 *
 * @generated from message pellchain.pellcore.xmsg.StakerDelegated
 */
export declare class StakerDelegated extends Message<StakerDelegated> {
  /**
   * @generated from field: string staker = 1;
   */
  staker: string;

  /**
   * @generated from field: string operator = 2;
   */
  operator: string;

  constructor(data?: PartialMessage<StakerDelegated>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "pellchain.pellcore.xmsg.StakerDelegated";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StakerDelegated;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StakerDelegated;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StakerDelegated;

  static equals(a: StakerDelegated | PlainMessage<StakerDelegated> | undefined, b: StakerDelegated | PlainMessage<StakerDelegated> | undefined): boolean;
}

/**
 * / @notice Emitted when @param pellTxSenderAddress sent to @param
 * / destinationAddress of @param destinationChainId. event PellSent(
 * /    address sourceTxOriginAddress,
 * /    address indexed pellTxSenderAddress,
 * /    uint256 indexed destinationChainId,
 * /    bytes destinationAddress,
 * /    bytes message,
 * /    bytes pellParams
 * /  );
 *
 * @generated from message pellchain.pellcore.xmsg.PellSent
 */
export declare class PellSent extends Message<PellSent> {
  /**
   * @generated from field: string tx_origin = 1;
   */
  txOrigin: string;

  /**
   * @generated from field: string sender = 2;
   */
  sender: string;

  /**
   * @generated from field: int64 receiver_chain_id = 3;
   */
  receiverChainId: bigint;

  /**
   * @generated from field: string receiver = 4;
   */
  receiver: string;

  /**
   * @generated from field: string message = 5;
   */
  message: string;

  /**
   * @generated from field: string pell_params = 6;
   */
  pellParams: string;

  constructor(data?: PartialMessage<PellSent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "pellchain.pellcore.xmsg.PellSent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PellSent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PellSent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PellSent;

  static equals(a: PellSent | PlainMessage<PellSent> | undefined, b: PellSent | PlainMessage<PellSent> | undefined): boolean;
}

/**
 * inboound pell event
 *
 * @generated from message pellchain.pellcore.xmsg.InboundPellEvent
 */
export declare class InboundPellEvent extends Message<InboundPellEvent> {
  /**
   * @generated from oneof pellchain.pellcore.xmsg.InboundPellEvent.pell_data
   */
  pellData: {
    /**
     * @generated from field: pellchain.pellcore.xmsg.StakerDeposited staker_deposited = 1;
     */
    value: StakerDeposited;
    case: "stakerDeposited";
  } | {
    /**
     * @generated from field: pellchain.pellcore.xmsg.StakerDelegated staker_delegated = 2;
     */
    value: StakerDelegated;
    case: "stakerDelegated";
  } | {
    /**
     * @generated from field: pellchain.pellcore.xmsg.PellSent pell_sent = 3;
     */
    value: PellSent;
    case: "pellSent";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<InboundPellEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "pellchain.pellcore.xmsg.InboundPellEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InboundPellEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InboundPellEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InboundPellEvent;

  static equals(a: InboundPellEvent | PlainMessage<InboundPellEvent> | undefined, b: InboundPellEvent | PlainMessage<InboundPellEvent> | undefined): boolean;
}

