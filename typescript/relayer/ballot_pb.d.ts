// @generated by protoc-gen-es v1.3.0 with parameter "target=dts"
// @generated from file relayer/ballot.proto (package pellchain.pellcore.relayer, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ObservationType } from "./relayer_pb.js";

/**
 * relayer vote type
 *
 * @generated from enum pellchain.pellcore.relayer.VoteType
 */
export declare enum VoteType {
  /**
   * success
   *
   * @generated from enum value: SUCCESS_OBSERVATION = 0;
   */
  SUCCESS_OBSERVATION = 0,

  /**
   * Failure observation means , the the message that
   * this voter is observing failed / reverted . It does
   * not mean it was unable to observe.
   *
   * @generated from enum value: FAILURE_OBSERVATION = 1;
   */
  FAILURE_OBSERVATION = 1,

  /**
   * not yet voted
   *
   * @generated from enum value: NOT_YET_VOTED = 2;
   */
  NOT_YET_VOTED = 2,
}

/**
 * ballot status
 *
 * @generated from enum pellchain.pellcore.relayer.BallotStatus
 */
export declare enum BallotStatus {
  /**
   * successful ballot
   *
   * @generated from enum value: BALLOT_FINALIZED_SUCCESS_OBSERVATION = 0;
   */
  BALLOT_FINALIZED_SUCCESS_OBSERVATION = 0,

  /**
   * failure ballot
   *
   * @generated from enum value: BALLOT_FINALIZED_FAILURE_OBSERVATION = 1;
   */
  BALLOT_FINALIZED_FAILURE_OBSERVATION = 1,

  /**
   * progress ballot
   *
   * @generated from enum value: BALLOT_IN_PROGRESS = 2;
   */
  BALLOT_IN_PROGRESS = 2,
}

/**
 * ballot
 *
 * @generated from message pellchain.pellcore.relayer.Ballot
 */
export declare class Ballot extends Message<Ballot> {
  /**
   * @generated from field: string index = 1;
   */
  index: string;

  /**
   * @generated from field: string ballot_identifier = 2;
   */
  ballotIdentifier: string;

  /**
   * @generated from field: repeated string voter_list = 3;
   */
  voterList: string[];

  /**
   * @generated from field: repeated pellchain.pellcore.relayer.VoteType votes = 4;
   */
  votes: VoteType[];

  /**
   * @generated from field: pellchain.pellcore.relayer.ObservationType observation_type = 5;
   */
  observationType: ObservationType;

  /**
   * @generated from field: string ballot_threshold = 6;
   */
  ballotThreshold: string;

  /**
   * @generated from field: pellchain.pellcore.relayer.BallotStatus ballot_status = 7;
   */
  ballotStatus: BallotStatus;

  /**
   * @generated from field: int64 ballot_creation_height = 8;
   */
  ballotCreationHeight: bigint;

  constructor(data?: PartialMessage<Ballot>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "pellchain.pellcore.relayer.Ballot";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Ballot;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Ballot;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Ballot;

  static equals(a: Ballot | PlainMessage<Ballot> | undefined, b: Ballot | PlainMessage<Ballot> | undefined): boolean;
}

/**
 * ballot list for block height
 *
 * @generated from message pellchain.pellcore.relayer.BallotListForHeight
 */
export declare class BallotListForHeight extends Message<BallotListForHeight> {
  /**
   * @generated from field: int64 height = 1;
   */
  height: bigint;

  /**
   * @generated from field: repeated string ballots_index_list = 2;
   */
  ballotsIndexList: string[];

  constructor(data?: PartialMessage<BallotListForHeight>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "pellchain.pellcore.relayer.BallotListForHeight";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BallotListForHeight;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BallotListForHeight;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BallotListForHeight;

  static equals(a: BallotListForHeight | PlainMessage<BallotListForHeight> | undefined, b: BallotListForHeight | PlainMessage<BallotListForHeight> | undefined): boolean;
}

