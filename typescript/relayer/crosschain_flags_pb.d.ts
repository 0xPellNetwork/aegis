// @generated by protoc-gen-es v1.3.0 with parameter "target=dts"
// @generated from file relayer/crosschain_flags.proto (package pellchain.pellcore.relayer, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * gas price increase flags
 *
 * @generated from message pellchain.pellcore.relayer.GasPriceIncreaseFlags
 */
export declare class GasPriceIncreaseFlags extends Message<GasPriceIncreaseFlags> {
  /**
   * @generated from field: int64 epoch_length = 1;
   */
  epochLength: bigint;

  /**
   * @generated from field: google.protobuf.Duration retry_interval = 2;
   */
  retryInterval?: Duration;

  /**
   * @generated from field: uint32 gas_price_increase_percent = 3;
   */
  gasPriceIncreasePercent: number;

  /**
   * Maximum gas price increase in percent of the median gas price
   * Default is used if 0
   *
   * @generated from field: uint32 gas_price_increase_max = 4;
   */
  gasPriceIncreaseMax: number;

  /**
   * Maximum number of pending crosschain transactions to check for gas price
   * increase
   *
   * @generated from field: uint32 max_pending_xmsgs = 5;
   */
  maxPendingXmsgs: number;

  constructor(data?: PartialMessage<GasPriceIncreaseFlags>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "pellchain.pellcore.relayer.GasPriceIncreaseFlags";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GasPriceIncreaseFlags;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GasPriceIncreaseFlags;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GasPriceIncreaseFlags;

  static equals(a: GasPriceIncreaseFlags | PlainMessage<GasPriceIncreaseFlags> | undefined, b: GasPriceIncreaseFlags | PlainMessage<GasPriceIncreaseFlags> | undefined): boolean;
}

/**
 * Deprecated(v16): Use VerificationFlags in the lightclient module instead
 *
 * @generated from message pellchain.pellcore.relayer.BlockHeaderVerificationFlags
 */
export declare class BlockHeaderVerificationFlags extends Message<BlockHeaderVerificationFlags> {
  /**
   * @generated from field: bool is_eth_type_chain_enabled = 1;
   */
  isEthTypeChainEnabled: boolean;

  /**
   * @generated from field: bool is_btc_type_chain_enabled = 2;
   */
  isBtcTypeChainEnabled: boolean;

  constructor(data?: PartialMessage<BlockHeaderVerificationFlags>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "pellchain.pellcore.relayer.BlockHeaderVerificationFlags";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BlockHeaderVerificationFlags;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BlockHeaderVerificationFlags;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BlockHeaderVerificationFlags;

  static equals(a: BlockHeaderVerificationFlags | PlainMessage<BlockHeaderVerificationFlags> | undefined, b: BlockHeaderVerificationFlags | PlainMessage<BlockHeaderVerificationFlags> | undefined): boolean;
}

/**
 * crosschain flags
 *
 * @generated from message pellchain.pellcore.relayer.CrosschainFlags
 */
export declare class CrosschainFlags extends Message<CrosschainFlags> {
  /**
   * @generated from field: bool is_inbound_enabled = 1;
   */
  isInboundEnabled: boolean;

  /**
   * @generated from field: bool is_outbound_enabled = 2;
   */
  isOutboundEnabled: boolean;

  /**
   * @generated from field: pellchain.pellcore.relayer.GasPriceIncreaseFlags gas_price_increase_flags = 3;
   */
  gasPriceIncreaseFlags?: GasPriceIncreaseFlags;

  /**
   * Deprecated(v16): Use VerificationFlags in the lightclient module instead
   *
   * @generated from field: pellchain.pellcore.relayer.BlockHeaderVerificationFlags block_header_verification_flags = 4;
   */
  blockHeaderVerificationFlags?: BlockHeaderVerificationFlags;

  constructor(data?: PartialMessage<CrosschainFlags>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "pellchain.pellcore.relayer.CrosschainFlags";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CrosschainFlags;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CrosschainFlags;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CrosschainFlags;

  static equals(a: CrosschainFlags | PlainMessage<CrosschainFlags> | undefined, b: CrosschainFlags | PlainMessage<CrosschainFlags> | undefined): boolean;
}

/**
 * legacy crosschain flags
 *
 * @generated from message pellchain.pellcore.relayer.LegacyCrosschainFlags
 */
export declare class LegacyCrosschainFlags extends Message<LegacyCrosschainFlags> {
  /**
   * @generated from field: bool is_inbound_enabled = 1;
   */
  isInboundEnabled: boolean;

  /**
   * @generated from field: bool is_outbound_enabled = 2;
   */
  isOutboundEnabled: boolean;

  /**
   * @generated from field: pellchain.pellcore.relayer.GasPriceIncreaseFlags gas_price_increase_flags = 3;
   */
  gasPriceIncreaseFlags?: GasPriceIncreaseFlags;

  constructor(data?: PartialMessage<LegacyCrosschainFlags>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "pellchain.pellcore.relayer.LegacyCrosschainFlags";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LegacyCrosschainFlags;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LegacyCrosschainFlags;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LegacyCrosschainFlags;

  static equals(a: LegacyCrosschainFlags | PlainMessage<LegacyCrosschainFlags> | undefined, b: LegacyCrosschainFlags | PlainMessage<LegacyCrosschainFlags> | undefined): boolean;
}

